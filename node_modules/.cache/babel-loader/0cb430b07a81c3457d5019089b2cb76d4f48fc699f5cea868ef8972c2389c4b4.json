{"ast":null,"code":"var _jsxFileName = \"/Users/vectornator/Desktop/Ctech/CC1/Project/fortune-cookie/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [fortune, setFortune] = useState('');\n  const [color, setColor] = useState('black');\n  const generateFortune = async () => {\n    try {\n      const response = await axios.post('https://api.openai.com/v1/completions', {\n        model: 'text-davinci-003',\n        prompt: 'Generate a fortune cookie sentence',\n        temperature: 0,\n        max_tokens: 7\n      }, {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer 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'\n        }\n      });\n      const newFortune = response.data.choices[0].text;\n      setFortune(newFortune);\n      setColor(getRandomColor());\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const getRandomColor = () => {\n    const colors = ['red', 'blue', 'green', 'purple', 'orange'];\n    return colors[Math.floor(Math.random() * colors.length)];\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color\n      },\n      children: fortune\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generateFortune,\n      children: \"Get Fortune\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"wHpHfCD2QXYmKCu30c9/MptK6xs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","App","fortune","setFortune","color","setColor","generateFortune","response","post","model","prompt","temperature","max_tokens","headers","Authorization","newFortune","data","choices","text","getRandomColor","error","console","colors","Math","floor","random","length"],"sources":["/Users/vectornator/Desktop/Ctech/CC1/Project/fortune-cookie/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  const [fortune, setFortune] = useState('');\n  const [color, setColor] = useState('black');\n\n  const generateFortune = async () => {\n    try {\n      const response = await axios.post(\n        'https://api.openai.com/v1/completions',\n        {\n          model: 'text-davinci-003',\n          prompt: 'Generate a fortune cookie sentence',\n          temperature: 0,\n          max_tokens: 7,\n        },\n        {\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: 'Bearer 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',\n          },\n        }\n      );\n      const newFortune = response.data.choices[0].text;\n      setFortune(newFortune);\n      setColor(getRandomColor());\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const getRandomColor = () => {\n    const colors = ['red', 'blue', 'green', 'purple', 'orange'];\n    return colors[Math.floor(Math.random() * colors.length)];\n  };\n\n  return (\n    <div>\n      <p style={{ color }}>{fortune}</p>\n      <button onClick={generateFortune}>Get Fortune</button>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,OAAO,CAAC;EAE3C,MAAMO,eAAe,GAAG,YAAY;IAClC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,IAAI,CAC/B,uCAAuC,EACvC;QACEC,KAAK,EAAE,kBAAkB;QACzBC,MAAM,EAAE,oCAAoC;QAC5CC,WAAW,EAAE,CAAC;QACdC,UAAU,EAAE;MACd,CAAC,EACD;QACEC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClCC,aAAa,EAAE;QACjB;MACF,CAAC,CACF;MACD,MAAMC,UAAU,GAAGR,QAAQ,CAACS,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI;MAChDf,UAAU,CAACY,UAAU,CAAC;MACtBV,QAAQ,CAACc,cAAc,EAAE,CAAC;IAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAED,MAAMD,cAAc,GAAG,MAAM;IAC3B,MAAMG,MAAM,GAAG,CAAC,KAAK,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,CAAC;IAC3D,OAAOA,MAAM,CAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGH,MAAM,CAACI,MAAM,CAAC,CAAC;EAC1D,CAAC;EAED,oBACE;IAAA,wBACE;MAAG,KAAK,EAAE;QAAEtB;MAAM,CAAE;MAAA,UAAEF;IAAO;MAAA;MAAA;MAAA;IAAA,QAAK,eAClC;MAAQ,OAAO,EAAEI,eAAgB;MAAA,UAAC;IAAW;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QAClD;AAEV;AAAC,GAxCQL,GAAG;AAAA,KAAHA,GAAG;AA0CZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}