{"ast":null,"code":"const fragmentShader = `\nuniform float u_intensity;\nuniform float u_time;\n\nvarying vec2 vUv;\nvarying float vDisplacement;\n\nvoid main() {\n    float distort = 2.0 * vDisplacement * u_intensity * sin(vUv.y * 10.0 + u_time);\n    vec3 color = vec3(abs(vUv - 0.5) * 2.0  * (1.0 - distort), 1.0);\n    gl_FragColor = vec4(color, 1.0);\n}\n\n`;\nexport default fragmentShader;","map":{"version":3,"names":["fragmentShader"],"sources":["/Users/vectornator/Desktop/Ctech/CC1/Project/fortune-teller/src/components/Blob/fragmentShader.js"],"sourcesContent":["const fragmentShader = `\nuniform float u_intensity;\nuniform float u_time;\n\nvarying vec2 vUv;\nvarying float vDisplacement;\n\nvoid main() {\n    float distort = 2.0 * vDisplacement * u_intensity * sin(vUv.y * 10.0 + u_time);\n    vec3 color = vec3(abs(vUv - 0.5) * 2.0  * (1.0 - distort), 1.0);\n    gl_FragColor = vec4(color, 1.0);\n}\n\n`;\n\nexport default fragmentShader;\n"],"mappings":"AAAA,MAAMA,cAAc,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,eAAeA,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}