{"ast":null,"code":"import _regeneratorRuntime from\"/Users/vectornator/Desktop/Ctech/CC1/Project/fortune-teller/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/vectornator/Desktop/Ctech/CC1/Project/fortune-teller/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/vectornator/Desktop/Ctech/CC1/Project/fortune-teller/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";// export default App;\nimport React,{useState}from'react';import axios from'axios';import FortuneType from'./components/FortuneType';import FortuneStyle from'./components/FortuneStyle';import AuraColor from'./components/AuraColor';import FortuneTeller from'./components/FortuneTeller';import ResultCard from'./components/ResultCard';import'./App.css';// Import dotenv and call its config method\nimport dotenv from'dotenv';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";dotenv.config();var App=function App(){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),fortuneType=_useState2[0],setFortuneType=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),fortuneStyle=_useState4[0],setFortuneStyle=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),auraColor=_useState6[0],setAuraColor=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),fortune=_useState8[0],setFortune=_useState8[1];var generateFortune=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var response,newFortune;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return axios.post('https://api.openai.com/v1/completions',{model:'text-davinci-003',prompt:\"Generate a \".concat(fortuneType,\" fortune in a \").concat(fortuneStyle,\" considering the aura meaning of the \").concat(auraColor,\" color\"),temperature:0,max_tokens:300},{headers:{'Content-Type':'application/json',Authorization:\"Bearer \".concat(process.env.REACT_APP_OPENAI_API_KEY)}});case 3:response=_context.sent;newFortune=response.data.choices[0].text;setFortune(newFortune);_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);console.error(_context.t0);case 11:case\"end\":return _context.stop();}},_callee,null,[[0,8]]);}));return function generateFortune(){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{className:\"app-body\",children:[!fortuneType?/*#__PURE__*/_jsx(FortuneType,{setFortuneType:setFortuneType}):!fortuneStyle?/*#__PURE__*/_jsx(FortuneStyle,{onStyleSelection:setFortuneStyle}):!auraColor?/*#__PURE__*/_jsx(AuraColor,{setAuraColor:setAuraColor}):/*#__PURE__*/_jsx(FortuneTeller,{fortune:fortune,auraColor:auraColor,generateFortune:generateFortune}),/*#__PURE__*/_jsxs(\"div\",{children:[!fortuneType?null:/*#__PURE__*/_jsx(ResultCard,{backText:fortuneType}),!fortuneStyle?null:/*#__PURE__*/_jsx(ResultCard,{backText:fortuneStyle}),!auraColor?null:/*#__PURE__*/_jsx(ResultCard,{backText:auraColor})]})]});};export default App;","map":{"version":3,"names":["React","useState","axios","FortuneType","FortuneStyle","AuraColor","FortuneTeller","ResultCard","dotenv","config","App","fortuneType","setFortuneType","fortuneStyle","setFortuneStyle","auraColor","setAuraColor","fortune","setFortune","generateFortune","post","model","prompt","temperature","max_tokens","headers","Authorization","process","env","REACT_APP_OPENAI_API_KEY","response","newFortune","data","choices","text","console","error"],"sources":["/Users/vectornator/Desktop/Ctech/CC1/Project/fortune-teller/src/App.js"],"sourcesContent":["\n// export default App;\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport FortuneType from './components/FortuneType';\nimport FortuneStyle from './components/FortuneStyle';\nimport AuraColor from './components/AuraColor';\nimport FortuneTeller from './components/FortuneTeller';\nimport ResultCard from './components/ResultCard';\nimport './App.css';\n\n// Import dotenv and call its config method\nimport dotenv from 'dotenv';\ndotenv.config();\n\nconst App = () => {\n  const [fortuneType, setFortuneType] = useState(null);\n  const [fortuneStyle, setFortuneStyle] = useState(null);\n  const [auraColor, setAuraColor] = useState(null);\n  const [fortune, setFortune] = useState('');\n\n  const generateFortune = async () => {\n    try {\n      const response = await axios.post(\n        'https://api.openai.com/v1/completions',\n        {\n          model: 'text-davinci-003',\n          prompt: `Generate a ${fortuneType} fortune in a ${fortuneStyle} considering the aura meaning of the ${auraColor} color`,\n          temperature: 0,\n          max_tokens: 300,\n        },\n        {\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${process.env.REACT_APP_OPENAI_API_KEY}`,\n          },\n        }\n      );\n      const newFortune = response.data.choices[0].text;\n      setFortune(newFortune);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  \n  return (\n    <div className='app-body'>\n      {!fortuneType ? (\n        <FortuneType setFortuneType={setFortuneType} />\n      ) : !fortuneStyle ? (\n        <FortuneStyle onStyleSelection={setFortuneStyle} />\n      ) : !auraColor ? (\n        <AuraColor setAuraColor={setAuraColor} />\n      ) : (\n        <FortuneTeller fortune={fortune} auraColor={auraColor} generateFortune={generateFortune} />\n      )}\n\n\n        <div>\n          {!fortuneType ? null:( <ResultCard backText={fortuneType} /> ) }\n\n          {!fortuneStyle ? null:( <ResultCard backText={fortuneStyle} /> ) }\n\n          {!auraColor ? null:( <ResultCard backText={auraColor} /> ) }\n    </div>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"mcACA;AACA,MAAOA,MAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAOC,MAAK,KAAM,OAAO,CACzB,MAAOC,YAAW,KAAM,0BAA0B,CAClD,MAAOC,aAAY,KAAM,2BAA2B,CACpD,MAAOC,UAAS,KAAM,wBAAwB,CAC9C,MAAOC,cAAa,KAAM,4BAA4B,CACtD,MAAOC,WAAU,KAAM,yBAAyB,CAChD,MAAO,WAAW,CAElB;AACA,MAAOC,OAAM,KAAM,QAAQ,CAAC,wFAC5BA,MAAM,CAACC,MAAM,EAAE,CAEf,GAAMC,IAAG,CAAG,QAANA,IAAG,EAAS,CAChB,cAAsCT,QAAQ,CAAC,IAAI,CAAC,wCAA7CU,WAAW,eAAEC,cAAc,eAClC,eAAwCX,QAAQ,CAAC,IAAI,CAAC,yCAA/CY,YAAY,eAAEC,eAAe,eACpC,eAAkCb,QAAQ,CAAC,IAAI,CAAC,yCAAzCc,SAAS,eAAEC,YAAY,eAC9B,eAA8Bf,QAAQ,CAAC,EAAE,CAAC,yCAAnCgB,OAAO,eAAEC,UAAU,eAE1B,GAAMC,gBAAe,4FAAG,kMAEGjB,MAAK,CAACkB,IAAI,CAC/B,uCAAuC,CACvC,CACEC,KAAK,CAAE,kBAAkB,CACzBC,MAAM,sBAAgBX,WAAW,0BAAiBE,YAAY,iDAAwCE,SAAS,UAAQ,CACvHQ,WAAW,CAAE,CAAC,CACdC,UAAU,CAAE,GACd,CAAC,CACD,CACEC,OAAO,CAAE,CACP,cAAc,CAAE,kBAAkB,CAClCC,aAAa,kBAAYC,OAAO,CAACC,GAAG,CAACC,wBAAwB,CAC/D,CACF,CAAC,CACF,QAdKC,QAAQ,eAeRC,UAAU,CAAGD,QAAQ,CAACE,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI,CAChDhB,UAAU,CAACa,UAAU,CAAC,CAAC,+EAEvBI,OAAO,CAACC,KAAK,aAAO,CAAC,mEAExB,kBAtBKjB,gBAAe,0CAsBpB,CAED,mBACE,aAAK,SAAS,CAAC,UAAU,WACtB,CAACR,WAAW,cACX,KAAC,WAAW,EAAC,cAAc,CAAEC,cAAe,EAAG,CAC7C,CAACC,YAAY,cACf,KAAC,YAAY,EAAC,gBAAgB,CAAEC,eAAgB,EAAG,CACjD,CAACC,SAAS,cACZ,KAAC,SAAS,EAAC,YAAY,CAAEC,YAAa,EAAG,cAEzC,KAAC,aAAa,EAAC,OAAO,CAAEC,OAAQ,CAAC,SAAS,CAAEF,SAAU,CAAC,eAAe,CAAEI,eAAgB,EACzF,cAGC,uBACG,CAACR,WAAW,CAAG,IAAI,cAAG,KAAC,UAAU,EAAC,QAAQ,CAAEA,WAAY,EAAK,CAE7D,CAACE,YAAY,CAAG,IAAI,cAAG,KAAC,UAAU,EAAC,QAAQ,CAAEA,YAAa,EAAK,CAE/D,CAACE,SAAS,CAAG,IAAI,cAAG,KAAC,UAAU,EAAC,QAAQ,CAAEA,SAAU,EAAK,GAC1D,GACA,CAEV,CAAC,CAED,cAAeL,IAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}