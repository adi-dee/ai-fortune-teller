{"ast":null,"code":"var _jsxFileName = \"/Users/vectornator/Desktop/Ctech/CC1/Project/fortune-teller/src/components/Blob/Blob.js\",\n  _s = $RefreshSig$();\nimport React, { useMemo, useRef } from \"react\";\nimport vertexShader from \"./vertexShader\";\nimport fragmentShader from \"./fragmentShader\";\nimport { useFrame } from \"@react-three/fiber\";\nimport { MathUtils } from \"three\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Blob = () => {\n  _s();\n  const mesh = useRef();\n  const hover = useRef(false);\n  const uniforms = useMemo(() => {\n    return {\n      u_time: {\n        value: 0\n      },\n      u_intensity: {\n        value: 0.3\n      }\n    };\n  });\n  useFrame(state => {\n    const {\n      clock\n    } = state;\n    if (mesh.current) {\n      mesh.current.material.uniforms.u_time.value = 0.4 * clock.getElapsedTime();\n      mesh.current.material.uniforms.u_intensity.value = MathUtils.lerp(mesh.current.material.uniforms.u_intensity.value, hover.current ? 1 : 0.15, 0.02);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    ref: mesh,\n    scale: 1.5,\n    position: [0, 0, 0],\n    onPointerOver: () => hover.current = true,\n    onPointerOut: () => hover.current = false,\n    children: [/*#__PURE__*/_jsxDEV(\"icosahedronBufferGeometry\", {\n      args: [2, 20]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"shaderMaterial\", {\n      vertexShader: vertexShader,\n      fragmentShader: fragmentShader,\n      uniforms: uniforms\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(Blob, \"MXLDZE1C+dDojK1hwP1kaSSOz3U=\", false, function () {\n  return [useFrame];\n});\n_c = Blob;\nexport default Blob;\nvar _c;\n$RefreshReg$(_c, \"Blob\");","map":{"version":3,"names":["React","useMemo","useRef","vertexShader","fragmentShader","useFrame","MathUtils","Blob","mesh","hover","uniforms","u_time","value","u_intensity","state","clock","current","material","getElapsedTime","lerp"],"sources":["/Users/vectornator/Desktop/Ctech/CC1/Project/fortune-teller/src/components/Blob/Blob.js"],"sourcesContent":["import React, { useMemo, useRef } from \"react\";\nimport vertexShader from \"./vertexShader\";\nimport fragmentShader from \"./fragmentShader\";\nimport { useFrame } from \"@react-three/fiber\";\nimport { MathUtils } from \"three\";\n\nconst Blob = () => {\n  const mesh = useRef();\n  const hover = useRef(false);\n  const uniforms = useMemo(() => {\n    return {\n      u_time: { value: 0 },\n      u_intensity: { value: 0.3 },\n    };\n  });\n\n  useFrame((state) => {\n    const { clock } = state;\n    if (mesh.current) {\n      mesh.current.material.uniforms.u_time.value =\n        0.4 * clock.getElapsedTime();\n\n      mesh.current.material.uniforms.u_intensity.value = MathUtils.lerp(\n        mesh.current.material.uniforms.u_intensity.value,\n        hover.current ? 1 : 0.15,\n        0.02\n      );\n    }\n  });\n  return (\n    <mesh\n      ref={mesh}\n      scale={1.5}\n      position={[0, 0, 0]}\n      onPointerOver={() => (hover.current = true)}\n      onPointerOut={() => (hover.current = false)}\n    >\n      <icosahedronBufferGeometry args={[2, 20]} />\n      <shaderMaterial\n        vertexShader={vertexShader}\n        fragmentShader={fragmentShader}\n        uniforms={uniforms}\n      />\n    </mesh>\n  );\n};\n\nexport default Blob;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,OAAO,EAAEC,MAAM,QAAQ,OAAO;AAC9C,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,SAASC,SAAS,QAAQ,OAAO;AAAC;AAElC,MAAMC,IAAI,GAAG,MAAM;EAAA;EACjB,MAAMC,IAAI,GAAGN,MAAM,EAAE;EACrB,MAAMO,KAAK,GAAGP,MAAM,CAAC,KAAK,CAAC;EAC3B,MAAMQ,QAAQ,GAAGT,OAAO,CAAC,MAAM;IAC7B,OAAO;MACLU,MAAM,EAAE;QAAEC,KAAK,EAAE;MAAE,CAAC;MACpBC,WAAW,EAAE;QAAED,KAAK,EAAE;MAAI;IAC5B,CAAC;EACH,CAAC,CAAC;EAEFP,QAAQ,CAAES,KAAK,IAAK;IAClB,MAAM;MAAEC;IAAM,CAAC,GAAGD,KAAK;IACvB,IAAIN,IAAI,CAACQ,OAAO,EAAE;MAChBR,IAAI,CAACQ,OAAO,CAACC,QAAQ,CAACP,QAAQ,CAACC,MAAM,CAACC,KAAK,GACzC,GAAG,GAAGG,KAAK,CAACG,cAAc,EAAE;MAE9BV,IAAI,CAACQ,OAAO,CAACC,QAAQ,CAACP,QAAQ,CAACG,WAAW,CAACD,KAAK,GAAGN,SAAS,CAACa,IAAI,CAC/DX,IAAI,CAACQ,OAAO,CAACC,QAAQ,CAACP,QAAQ,CAACG,WAAW,CAACD,KAAK,EAChDH,KAAK,CAACO,OAAO,GAAG,CAAC,GAAG,IAAI,EACxB,IAAI,CACL;IACH;EACF,CAAC,CAAC;EACF,oBACE;IACE,GAAG,EAAER,IAAK;IACV,KAAK,EAAE,GAAI;IACX,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;IACpB,aAAa,EAAE,MAAOC,KAAK,CAACO,OAAO,GAAG,IAAM;IAC5C,YAAY,EAAE,MAAOP,KAAK,CAACO,OAAO,GAAG,KAAO;IAAA,wBAE5C;MAA2B,IAAI,EAAE,CAAC,CAAC,EAAE,EAAE;IAAE;MAAA;MAAA;MAAA;IAAA,QAAG,eAC5C;MACE,YAAY,EAAEb,YAAa;MAC3B,cAAc,EAAEC,cAAe;MAC/B,QAAQ,EAAEM;IAAS;MAAA;MAAA;MAAA;IAAA,QACnB;EAAA;IAAA;IAAA;IAAA;EAAA,QACG;AAEX,CAAC;AAAC,GAvCIH,IAAI;EAAA,QAURF,QAAQ;AAAA;AAAA,KAVJE,IAAI;AAyCV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}