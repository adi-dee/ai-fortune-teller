{"ast":null,"code":"var _jsxFileName = \"/Users/vectornator/Desktop/Ctech/CC1/Project/fortune-cookie/src/App.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// function App() {\n//   const [fortune, setFortune] = useState('');\n//   const [color, setColor] = useState('black');\n\n//   const generateFortune = async () => {\n//     try {\n//       const response = await axios.post(\n//         'https://api.openai.com/v1/completions',\n//         {\n//           model: 'text-davinci-003',\n//           prompt: 'Generate a fortune cookie sentence',\n//           temperature: 0,\n//           max_tokens: 7,\n//         },\n//         {\n//           headers: {\n//             'Content-Type': 'application/json',\n//             Authorization: 'Bearer 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',\n//           },\n//         }\n//       );\n//       const newFortune = response.data.choices[0].text;\n//       setFortune(newFortune);\n//       setColor(getRandomColor());\n//     } catch (error) {\n//       console.error(error);\n//     }\n//   };\n\n//   const getRandomColor = () => {\n//     const colors = ['red', 'blue', 'green', 'purple', 'orange'];\n//     return colors[Math.floor(Math.random() * colors.length)];\n//   };\n\n//   return (\n//     <div>\n//       <p style={{ color }}>{fortune}</p>\n//       <button onClick={generateFortune}>Get Fortune</button>\n//     </div>\n//   );\n// }\n\n// export default App;\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport FortuneType from './FortuneType';\nimport FortuneStyle from './FortuneStyle';\nimport AuraColor from './AuraColor';\nimport FortuneTeller from './FortuneTeller';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [step, setStep] = useState(1);\n  const [typeOfFortune, setTypeOfFortune] = useState('');\n  const [fortuneStyle, setFortuneStyle] = useState('');\n  const [auraColor, setAuraColor] = useState('');\n  const [fortune, setFortune] = useState('');\n  const generateFortune = async () => {\n    try {\n      let prompt = \"Generate a fortune cookie sentence\";\n      if (typeOfFortune) {\n        prompt = `Generate a ${typeOfFortune} fortune`;\n      }\n      if (fortuneStyle) {\n        prompt = `${prompt} in a ${fortuneStyle} style`;\n      }\n      const response = await axios.post('https://api.openai.com/v1/completions', {\n        model: 'text-davinci-003',\n        prompt,\n        temperature: 0,\n        max_tokens: 7\n      }, {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer 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'\n        }\n      });\n      const newFortune = response.data.choices[0].text;\n      setFortune(newFortune);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleAuraColor = color => {\n    setAuraColor(color);\n    setStep(step + 1);\n  };\n  const handleFortuneStyleSelection = style => {\n    setFortuneStyle(style);\n    setStep(step + 1);\n  };\n  const handleTypeOfFortuneSelection = type => {\n    setTypeOfFortune(type);\n    setStep(step + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [step === 1 && /*#__PURE__*/_jsxDEV(FortuneType, {\n      handleSelection: handleTypeOfFortuneSelection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this), step === 2 && /*#__PURE__*/_jsxDEV(FortuneStyle, {\n      handleSelection: handleFortuneStyleSelection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this), step === 3 && /*#__PURE__*/_jsxDEV(AuraColor, {\n      handleSelection: handleAuraColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this), step === 4 && /*#__PURE__*/_jsxDEV(FortuneTeller, {\n      fortune: fortune,\n      auraColor: auraColor,\n      generateFortune: generateFortune\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"YJVrgFJd/Nm0A4JnoYYbv0qmV5s=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","FortuneType","FortuneStyle","AuraColor","FortuneTeller","App","step","setStep","typeOfFortune","setTypeOfFortune","fortuneStyle","setFortuneStyle","auraColor","setAuraColor","fortune","setFortune","generateFortune","prompt","response","post","model","temperature","max_tokens","headers","Authorization","newFortune","data","choices","text","error","console","handleAuraColor","color","handleFortuneStyleSelection","style","handleTypeOfFortuneSelection","type"],"sources":["/Users/vectornator/Desktop/Ctech/CC1/Project/fortune-cookie/src/App.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// function App() {\n//   const [fortune, setFortune] = useState('');\n//   const [color, setColor] = useState('black');\n\n//   const generateFortune = async () => {\n//     try {\n//       const response = await axios.post(\n//         'https://api.openai.com/v1/completions',\n//         {\n//           model: 'text-davinci-003',\n//           prompt: 'Generate a fortune cookie sentence',\n//           temperature: 0,\n//           max_tokens: 7,\n//         },\n//         {\n//           headers: {\n//             'Content-Type': 'application/json',\n//             Authorization: 'Bearer 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',\n//           },\n//         }\n//       );\n//       const newFortune = response.data.choices[0].text;\n//       setFortune(newFortune);\n//       setColor(getRandomColor());\n//     } catch (error) {\n//       console.error(error);\n//     }\n//   };\n\n//   const getRandomColor = () => {\n//     const colors = ['red', 'blue', 'green', 'purple', 'orange'];\n//     return colors[Math.floor(Math.random() * colors.length)];\n//   };\n\n//   return (\n//     <div>\n//       <p style={{ color }}>{fortune}</p>\n//       <button onClick={generateFortune}>Get Fortune</button>\n//     </div>\n//   );\n// }\n\n// export default App;\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport FortuneType from './FortuneType';\nimport FortuneStyle from './FortuneStyle';\nimport AuraColor from './AuraColor';\nimport FortuneTeller from './FortuneTeller';\n\nconst App = () => {\n  const [step, setStep] = useState(1);\n  const [typeOfFortune, setTypeOfFortune] = useState('');\n  const [fortuneStyle, setFortuneStyle] = useState('');\n  const [auraColor, setAuraColor] = useState('');\n  const [fortune, setFortune] = useState('');\n\n  const generateFortune = async () => {\n    try {\n      let prompt = \"Generate a fortune cookie sentence\";\n      if (typeOfFortune) {\n        prompt = `Generate a ${typeOfFortune} fortune`;\n      }\n      if (fortuneStyle) {\n        prompt = `${prompt} in a ${fortuneStyle} style`;\n      }\n\n      const response = await axios.post(\n        'https://api.openai.com/v1/completions',\n        {\n          model: 'text-davinci-003',\n          prompt,\n          temperature: 0,\n          max_tokens: 7,\n        },\n        {\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: 'Bearer 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',\n          },\n        }\n      );\n\n      const newFortune = response.data.choices[0].text;\n      setFortune(newFortune);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleAuraColor = (color) => {\n    setAuraColor(color);\n    setStep(step + 1);\n  };\n\n  const handleFortuneStyleSelection = (style) => {\n    setFortuneStyle(style);\n    setStep(step + 1);\n  };\n\n  const handleTypeOfFortuneSelection = (type) => {\n    setTypeOfFortune(type);\n    setStep(step + 1);\n  };\n\n  return (\n    <div className=\"App\">\n      {step === 1 && (\n        <FortuneType handleSelection={handleTypeOfFortuneSelection} />\n      )}\n      {step === 2 && (\n        <FortuneStyle handleSelection={handleFortuneStyleSelection} />\n      )}\n      {step === 3 && (\n        <AuraColor handleSelection={handleAuraColor} />\n      )}\n      {step === 4 && (\n        <FortuneTeller\n          fortune={fortune}\n          auraColor={auraColor}\n          generateFortune={generateFortune}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}