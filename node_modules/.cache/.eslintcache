[{"/Users/vectornator/Desktop/Ctech/CC1/Project/fortune-teller/src/index.js":"1","/Users/vectornator/Desktop/Ctech/CC1/Project/fortune-teller/src/reportWebVitals.js":"2","/Users/vectornator/Desktop/Ctech/CC1/Project/fortune-teller/src/App.js":"3","/Users/vectornator/Desktop/Ctech/CC1/Project/fortune-teller/src/components/FortuneType.js":"4","/Users/vectornator/Desktop/Ctech/CC1/Project/fortune-teller/src/components/FortuneStyle.js":"5","/Users/vectornator/Desktop/Ctech/CC1/Project/fortune-teller/src/components/FortuneTeller.js":"6","/Users/vectornator/Desktop/Ctech/CC1/Project/fortune-teller/src/components/AuraColor.js":"7","/Users/vectornator/Desktop/Ctech/CC1/Project/fortune-teller/src/components/Card.js":"8","/Users/vectornator/Desktop/Ctech/CC1/Project/fortune-teller/src/components/ResultCard.js":"9"},{"size":535,"mtime":1675451045920,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1675271881102,"results":"12","hashOfConfig":"11"},{"size":2014,"mtime":1676646645696,"results":"13","hashOfConfig":"11"},{"size":855,"mtime":1675972082652,"results":"14","hashOfConfig":"11"},{"size":1006,"mtime":1675973121466,"results":"15","hashOfConfig":"11"},{"size":416,"mtime":1676646351269,"results":"16","hashOfConfig":"11"},{"size":1244,"mtime":1675973258618,"results":"17","hashOfConfig":"11"},{"size":461,"mtime":1675965703424,"results":"18","hashOfConfig":"11"},{"size":384,"mtime":1675963416448,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"20u9zq",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"23"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"23"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"23"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"23"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"23"},"/Users/vectornator/Desktop/Ctech/CC1/Project/fortune-teller/src/index.js",[],[],[],"/Users/vectornator/Desktop/Ctech/CC1/Project/fortune-teller/src/reportWebVitals.js",[],[],"/Users/vectornator/Desktop/Ctech/CC1/Project/fortune-teller/src/App.js",[],[],"/Users/vectornator/Desktop/Ctech/CC1/Project/fortune-teller/src/components/FortuneType.js",["53"],[],"import React, { useState } from 'react';\nimport Card from './Card';\n\nconst FortuneType = ({ setFortuneType }) => {\n  const [selectedType, setSelectedType] = useState(null);\n  const handleSelection = (type) => {\n    setSelectedType(type);\n    setFortuneType(type);\n  };\n  \n  return (\n    <div className='cards'>\n      <h2>Select a Fortune Topic</h2>\n      <span onClick={() => handleSelection('love')}>\n        <Card front={\"\"} backText={\"Love\"}/>\n      </span>\n      <span onClick={() => handleSelection('career')}>\n        <Card front={\"\"} backText={\"Career\"}/>\n      </span>\n      <span onClick={() => handleSelection('wealth')}>\n       <Card front={\"\"} backText={\"Wealth\"}/>\n      </span>\n      <span onClick={() => handleSelection('health')}>\n        <Card front={\"\"} backText={\"Health\"}/>\n      </span>\n    </div>\n  );\n};\n\nexport default FortuneType;","/Users/vectornator/Desktop/Ctech/CC1/Project/fortune-teller/src/components/FortuneStyle.js",["54"],[],"import React, { useState } from \"react\";\nimport Card from './Card';\n\nconst FortuneStyle = ({ onStyleSelection }) => {\n  const [selectedStyle, setSelectedStyle] = useState(null);\n\n  const handleStyleSelection = (style) => {\n    setSelectedStyle(style);\n    if (typeof onStyleSelection === \"function\") {\n      onStyleSelection(style);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Select Fortune Style</h2>\n      <div className=\"cards\">\n        <span onClick={() => handleStyleSelection(\"riddle\")}>\n          <Card front={\"\"} backText={\"Riddle\"}/>\n        </span>\n        <span onClick={() => handleStyleSelection(\"mystic\")}>\n          <Card front={\"\"} backText={\"Mystic\"}/>\n        </span>\n        <span onClick={() => handleStyleSelection(\"honest\")}>\n          <Card front={\"\"} backText={\"Dark\"}/>\n        </span>\n        <span onClick={() => handleStyleSelection(\"inspiring\")}>\n          <Card front={\"\"} backText={\"Inspiring\"}/>\n        </span>\n      </div>\n    </div>\n  );\n};\n\nexport default FortuneStyle;\n","/Users/vectornator/Desktop/Ctech/CC1/Project/fortune-teller/src/components/FortuneTeller.js",[],[],"/Users/vectornator/Desktop/Ctech/CC1/Project/fortune-teller/src/components/AuraColor.js",["55"],[],"import React, { useState } from \"react\";\nimport Card from './Card';\n\nconst AuraColor = ({ setAuraColor }) => {\n  const [selectedColor, setSelectedColor] = useState(null);\n\n  const handleColorSelection = (color) => {\n    setSelectedColor(color);\n    setAuraColor(color);\n  };\n\n  return (\n        <div className=\"cards color-cards\">\n        <h2>Select Your Aura Color</h2>\n        <div>   \n          <span style={{ color: \"red\" }} onClick={() => handleColorSelection(\"red\")}>\n          <Card front={\"\"} backText={\"Red\"}/>\n          </span>\n          <span style={{ color: \"Blue\" }} onClick={() => handleColorSelection(\"blue\")}>\n            <Card front={\"\"} backText={\"Blue\"}/>\n          </span>\n          <span style={{ color: \"#FFF05A\" }}  onClick={() => handleColorSelection(\"yellow\")}>\n            <Card front={\"\"} backText={\"Yellow\"}/>\n          </span>\n          <span style={{ color: \"Green\" }} onClick={() => handleColorSelection(\"green\")}>\n            <Card front={\"\"} backText={\"Green\"}/>\n          </span>\n          <span  style={{ color: \"Orange\" }}  onClick={() => handleColorSelection(\"orange\")}>\n            <Card front={\"\"} backText={\"Orange\"}/>\n          </span>\n  \n          </div>\n      </div>\n  );\n};\n\nexport default AuraColor;","/Users/vectornator/Desktop/Ctech/CC1/Project/fortune-teller/src/components/Card.js",["56"],[],"import React, { useState } from \"react\";\n\nconst Card =  ({ front, backText }) => {\n    return (\n    <div class=\"container\"> \n        <div className=\"card\">  \n\n        <div className=\"card_front\">\n        <p className=\"\">\n            {front}\n        </p>\n        </div>\n\n        <div className=\"card_back\">\n        <div className=\"card-text\">\n            <p>{backText}</p>\n        </div>\n        </div>    \n    </div>\n    </div>\n\n    );\n};\n\nexport default Card;\n","/Users/vectornator/Desktop/Ctech/CC1/Project/fortune-teller/src/components/ResultCard.js",["57"],[],"import React, { useState } from \"react\";\n\nconst ResultCard =  ({  backText }) => {\n    return (\n        <div  className=\"result-container\">\n        <div className=\"result-card\">  \n        <div className=\"result-card_back\">\n        <div className=\"result-card-text\">\n            {backText}\n        </div>\n        </div>    \n    </div>\n    </div>\n\n    );\n};\n\nexport default ResultCard;\n",{"ruleId":"58","severity":1,"message":"59","line":5,"column":10,"nodeType":"60","messageId":"61","endLine":5,"endColumn":22},{"ruleId":"58","severity":1,"message":"62","line":5,"column":10,"nodeType":"60","messageId":"61","endLine":5,"endColumn":23},{"ruleId":"58","severity":1,"message":"63","line":5,"column":10,"nodeType":"60","messageId":"61","endLine":5,"endColumn":23},{"ruleId":"58","severity":1,"message":"64","line":1,"column":17,"nodeType":"60","messageId":"61","endLine":1,"endColumn":25},{"ruleId":"58","severity":1,"message":"64","line":1,"column":17,"nodeType":"60","messageId":"61","endLine":1,"endColumn":25},"no-unused-vars","'selectedType' is assigned a value but never used.","Identifier","unusedVar","'selectedStyle' is assigned a value but never used.","'selectedColor' is assigned a value but never used.","'useState' is defined but never used."]